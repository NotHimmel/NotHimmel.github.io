<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>拉吉塔尼的鹦鹉会笑:)</title><link>https://nothimmel.github.io</link><description>天地与我共生，万物与我为一</description><copyright>拉吉塔尼的鹦鹉会笑:)</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://nothimmel.github.io/avatar.svg</url><title>avatar</title><link>https://nothimmel.github.io</link></image><lastBuildDate>Thu, 03 Jul 2025 08:14:52 +0000</lastBuildDate><managingEditor>拉吉塔尼的鹦鹉会笑:)</managingEditor><ttl>60</ttl><webMaster>拉吉塔尼的鹦鹉会笑:)</webMaster><item><title>Windows重装指南</title><link>https://nothimmel.github.io/post/Windows-zhong-zhuang-zhi-nan.html</link><description>
## Scoop
scoop-cn https://mirror.ghproxy.com/https://github.com/duzyn/scoop-cn 2025/1/22 8:58:12 5788
scoop-proxy-cn https://mirror.ghproxy.com/github.com/lzwme/scoop-proxy-cn 2025/1/21 9:48:30 10113
推荐使用别名
Name Command
---- -------
add scoop install $args[0]
i scoop install $args[0]
ls scoop list
remove scoop uninstall $args[0]
rm scoop uninstall $args[0]
s scoop search $args[0]
ss scoop status
u scoop update $args[0]
upgrade scoop update $args[0]

推荐使用 [scoop-search]( https://github.com/shilangyu/scoop-search) 提升搜索速度，非常好用
## [KeePassXC](https://github.com/keepassxreboot/keepassxc)


# Reference
[Scoop](https://www.wangwangit.com/2025-04-16-Scoop%E4%BD%A0%E7%9A%84Windows%E8%BD%AF%E4%BB%B6%E7%AE%A1%E7%90%86%E7%A5%9E%E5%99%A8/)
。</description><guid isPermaLink="true">https://nothimmel.github.io/post/Windows-zhong-zhuang-zhi-nan.html</guid><pubDate>Thu, 03 Jul 2025 08:14:18 +0000</pubDate></item><item><title>Rust从入门到放弃</title><link>https://nothimmel.github.io/post/Rust-cong-ru-men-dao-fang-qi.html</link><description># Reference
https://course.rs/first-try/hello-world.html

## 基础
let a = 'hello_world' 绑定变量与所有权转移

默认变量不可变，mut可变
let mut x = 5;
x = 6;

带下划线开头的变量，就算不使用也不会warning
let _x = 5;

常量用const声明，可以声明在全局范围
const MAX_POINTS: u32 = 100_000;

数值类型
浮点数只是近似，不能用于判等

### [所有权](https://course.rs/basic/ownership/ownership.html)
基本数据类型只是栈上值的拷贝、赋值
复杂数据类型如string，是所有权的转移，深拷贝需用clone()
不可变引用的copy并非所有权转移，原引用仍可使用。</description><guid isPermaLink="true">https://nothimmel.github.io/post/Rust-cong-ru-men-dao-fang-qi.html</guid><pubDate>Tue, 01 Jul 2025 02:33:20 +0000</pubDate></item><item><title>Rust GUI框架选择</title><link>https://nothimmel.github.io/post/Rust%20GUI-kuang-jia-xuan-ze.html</link><description># 参赛选手

## [egui](https://github.com/emilk/egui) UI 和逻辑耦合性强， 是一个库，逐帧渲染，适合简单ui操作

## [Iced](https://github.com/iced-rs/iced) 数据驱动 Elm 架构 Model - View - Update 跨平台支持

## [Ribir](https://github.com/RibirX/Ribir) 界面和数据分离 跨平台支持 官网文档友好

## [slint](https://github.com/slint-ui/slint) slint定义UI文件 跨平台支持

## [fltk-rs](https://github.com/fltk-rs/fltk-rs) fltk原是C++的库，改为rust，面向对象编程思维友好，有[中文翻译文档](https://fltk.flatig.vip/Home.html)
有人提到，相比iced编译出来的要小很多，我猜测是适合小程序。</description><guid isPermaLink="true">https://nothimmel.github.io/post/Rust%20GUI-kuang-jia-xuan-ze.html</guid><pubDate>Wed, 25 Jun 2025 09:56:24 +0000</pubDate></item><item><title>配置文件管理手册</title><link>https://nothimmel.github.io/post/pei-zhi-wen-jian-guan-li-shou-ce.html</link><description>
# ssh
ssh-copy-id -i ~/.ssh/id_rsa.pub user@server

~/.ssh/config

## tool
https://www.hejki.org/ssheditor/

# tmux
vim ~/.tmux.conf
tmux source-file ~/.tmux.conf
```
# set-option -g prefix C-a
# unbind-key C-b
# bind-key C-a send-prefix
set -g mouse on
#################### 全局配置 ####################

# 热键替换
# unbind C-b
# set -g prefix C-s

# 'C-s R' 重载 tmux 配置
bind R source-file ~/.tmux.conf \; display-message 'Tmux Config reloaded...'

# 'C-s s' 选择 session 顺序调整
bind s choose-tree -s -r -O name -K '' 

# 'C-s m' 切换鼠标支持
bind m run-shell 'if [ '$(tmux show-option -gq mouse)' == 'mouse on' ]; then tmux set -g mouse off; else tmux set -g mouse on; fi'\; display-message 'Mouse Switched...'

# OSC 52
# https://github.com/tmux/tmux/wiki/Clipboard
set -s set-clipboard on

#################### 窗口配置 ####################

# 窗口重命名
set -w -g allow-rename on
set -w -g automatic-rename on

# 窗口号和窗口分割号从 1 开始
set -g base-index 1
set -w -g pane-base-index 1

# 窗口操作默认按键绑定
set -w -g mode-keys vi

# 终端颜色
# 此颜色应当与所使用终端配置一致，当前为 Alacritty
set -g default-terminal 'xterm-256color'
# -a: append
set -ga terminal-overrides ',xterm-256color:Tc:clipboard'

# 防止自动关闭 Session
set -g destroy-unattached off

#################### 状态栏 ####################
# 状态栏位置
set -g status-position top
# 颜色
set -g status-bg default
set -g status-fg white

# 刷新时间
set -g status-interval 1

# 对齐方式
set -g status-justify centre

# 左下角
set -g status-left '#[fg=brightcyan]#S'
set -g status-left-length 20

# 右下角
set -g status-right '#[fg=brightcyan][%H:%M]'

# 状态栏颜色
set -g status-style fg=brightgreen

# 消息颜色
set -g message-style fg=brightgreen

# 默认窗口标题颜色
set -w -g window-status-format '#[dim]#I:#W'

# 当前窗口标题颜色
set -w -g window-status-current-format '#[fg=brightcyan,bold]#I:#W'

# pane border
#set -g pane-border-style fg=brightred
#set -g pane-active-border-style fg=brightgreen

# pane number display
set -g display-panes-active-colour brightgreen
set -g display-panes-colour brightyellow

####################  Plugins ####################
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'MunifTanjim/tmux-mode-indicator'
set -g @plugin 'MunifTanjim/tmux-suspend'
set -g @suspend_key 'F12'

# remove colors from status line for suspended state
set -g @suspend_suspended_options ' \
    status-left::#[bg=brightblack]--------, \
    status-right::#[bg=brightblack][-----], \
    window-status-current-format::#[bg=brightblack]-----
'

run '~/.tmux/plugins/tpm/tpm'

#################### WorkSpaces ####################

# init workspace
#new-session -d -s '🍁 local'
#new-session -d -s '🌋 test'
#new-session -d -s '🌀 prod'

# custom hook(mmh auto change context)
#set-hook -t '🌋 test' client-session-changed 'run-shell 'mcx yt-test &gt; /dev/null''
#set-hook -t '🌀 prod' client-session-changed 'run-shell 'mcx yt-prod &gt; /dev/null''
``` 。</description><guid isPermaLink="true">https://nothimmel.github.io/post/pei-zhi-wen-jian-guan-li-shou-ce.html</guid><pubDate>Wed, 25 Jun 2025 08:32:02 +0000</pubDate></item><item><title>Himmel的软件使用总结 I  终端  Wezterm</title><link>https://nothimmel.github.io/post/Himmel-de-ruan-jian-shi-yong-zong-jie-%20I%20%20-zhong-duan-%20%20Wezterm.html</link><description> # 终端选择哲学
本文在挑选主力终端软件时，主要基于以下要求：
1. 开源
终端软件会接触到各种密码，如果不是真开源是不敢用的。</description><guid isPermaLink="true">https://nothimmel.github.io/post/Himmel-de-ruan-jian-shi-yong-zong-jie-%20I%20%20-zhong-duan-%20%20Wezterm.html</guid><pubDate>Wed, 25 Jun 2025 07:40:22 +0000</pubDate></item><item><title>Redbook 5th 翻译 Part I</title><link>https://nothimmel.github.io/post/Redbook%205th%20-fan-yi-%20Part%20I.html</link><description>[原文链接](http://www.redbook.io)  

# [Preface](http://www.redbook.io/preface.html)
自上一版《数据库系统读物》问世以来的十年里，数据管理领域发生了爆炸式增长。</description><guid isPermaLink="true">https://nothimmel.github.io/post/Redbook%205th%20-fan-yi-%20Part%20I.html</guid><pubDate>Thu, 19 Jun 2025 02:46:35 +0000</pubDate></item><item><title>SQL语句</title><link>https://nothimmel.github.io/post/SQL-yu-ju.html</link><description># 简介
将DB学习过程中遇到的不明白的SQL语句记录在此。</description><guid isPermaLink="true">https://nothimmel.github.io/post/SQL-yu-ju.html</guid><pubDate>Thu, 12 Jun 2025 07:33:10 +0000</pubDate></item><item><title>CMU15-445冒险记</title><link>https://nothimmel.github.io/post/CMU15-445-mao-xian-ji.html</link><description># 课程链接
[课程主页](https://15445.courses.cs.cmu.edu/fall2024/schedule.html)
[课程视频](https://www.bilibili.com/video/BV169QhYZEhn)

# 进度
Lecture2 20min
Lecture3。</description><guid isPermaLink="true">https://nothimmel.github.io/post/CMU15-445-mao-xian-ji.html</guid><pubDate>Thu, 12 Jun 2025 06:17:37 +0000</pubDate></item><item><title>COMP9315冒险记</title><link>https://nothimmel.github.io/post/COMP9315-mao-xian-ji.html</link><description># 课程链接
&lt;a href='https://cgi.cse.unsw.edu.au/~cs9315/24T1/index.php' target='_blank'&gt;24课程主页&lt;/a&gt;
&lt;a href='https://www.bilibili.com/video/BV1qXoqYHErC?spm_id_from=333.788.videopod.episodes&amp;vd_source=28de2b83f4d42d39469471953b83bc66&amp;p=2' target='_blank'&gt;课程视频&lt;/a&gt;
&lt;a href='https://vwong.dev/notes/COMP9315/' target='_blank'&gt;课程笔记&lt;/a&gt;
&lt;a href='https://github.com/weil0819/COMP9315' target='_blank'&gt;离线课程材料&lt;/a&gt;


# 课程进度
p5 0：00 Week2

# 课程笔记
![Image](https://github.com/user-attachments/assets/0aac4ede-62de-4b67-ae17-6672f4089ff2)
添加表这个DDL操作，只会在数据库中的目录(Catalog)中新增一个条目，并返回一个状态如：
```psql
jas=# create table RR ( x integer, y integer);
CREATE TABLE

jas=# \d rr
    Table 'Public.rr'
Column | Type   | Modifiers
-------+---------+-----------
x      | integer |
y      | integer |      
``` 

关系代数语言可以用数学的角度来理解，也可以作为操作数据的汇编语言来理解。</description><guid isPermaLink="true">https://nothimmel.github.io/post/COMP9315-mao-xian-ji.html</guid><pubDate>Thu, 12 Jun 2025 06:12:36 +0000</pubDate></item><item><title>PostgreSQL 服务端编码支持GB18030</title><link>https://nothimmel.github.io/post/PostgreSQL%20-fu-wu-duan-bian-ma-zhi-chi-GB18030.html</link><description># 编码介绍
目前熟知的编码方式如下：

- 基础ASCII 单字节 7位128个
- 扩展ASCII 单字节 8位256个
- GB2312-80  可变长编码（1-2字节） 6763个汉字 国标
- GBK 可变长编码（1-2字节）21003个汉字 商业非国标
- UTF Unicode标准
- UTF-16 可变长编码（2或4字节） 不兼容ASCII
- UTF-8 可变长编码（1-4字节 ASCII、希腊字母、汉字、其他平面符号）
- GB18030 
- GB18030-2000/2005
- [GB18030-2022](https://openstd.samr.gov.cn/bzgk/gb/newGbInfo?hcno=A1931A578FE14957104988029B0833D3) 可变长编码（1ASCII，2GBK，4其他文字扩展 字节） CJK 统一汉字87875个

问题：GB18030完全兼容GBK吗？

尊重UTF-8是目前应用最广泛的编码，给出一个示例：

&lt;!--StartFragment--&gt;
  | 第1字节 | 第2字节 | 第3字节 | 第4字节
-- | -- | -- | -- | --
单字节示例 | 0xxxxxxx |   |   |  
双字节示例 | 110xxxxx | 10xxxxxx |   |  
三字节示例 | 1110xxxx | 10xxxxxx | 10xxxxxx |  
四字节示例 | 11110xxx | 10xxxxxx | 10xxxxxx | 10xxxxxx
&lt;!--EndFragment--&gt;

# Posgres中的[支持编码集](https://www.postgresql.org/docs/current/multibyte.html)
截至pg18，不支持服务端的GB18030编码
![Image](https://github.com/user-attachments/assets/9f177f06-df11-4c29-8244-0fcb64137c69)

# 支持GB18030思路

- [ ] 创建 GB18030 编码的数据库，可考虑实现多版本2005/2022
- [ ] GB18030作为服务器编码时，要能够在pg_conversion中和客户端其他的字符集编码进行转换
- [ ] 适配识别GB18030的字符串处理函数
- [ ] 适配GB18030字符集的排序、索引

# 支持GB18030服务器编码的数据库是什么样的？

## 首先服务器要支持GB18030
sudo locale-gen zh_CN.GBK
sudo locale-gen zh_CN.GB18030

sudo dpkg-reconfigure locales

## 1. pro
```
SELECT DISTINCT pg_encoding_to_char(conforencoding) AS supported_encoding
FROM pg_conversion
ORDER BY supported_encoding;
--查询了系统目录 pg_conversion，这个表存储了所有可用的编码转换规则。</description><guid isPermaLink="true">https://nothimmel.github.io/post/PostgreSQL%20-fu-wu-duan-bian-ma-zhi-chi-GB18030.html</guid><pubDate>Wed, 11 Jun 2025 08:45:32 +0000</pubDate></item><item><title>数据库使用手册-基本版</title><link>https://nothimmel.github.io/post/shu-ju-ku-shi-yong-shou-ce---ji-ben-ban.html</link><description>## Postgres
下载Postgres[源码](http://www.postgresql.org/ftp/source/)
```
tar xfj *.bz2 # tar -zxvf *.gz
# useradd -m postgres; passwd postgres;
sudo mkdir -p /opt/pgsql
sudo chown -R $USER /opt/pgsql

# yum install  readline-devel
./configure --prefix=/opt/pgsql &amp;&amp; make -j 8 &amp;&amp; make install
```

添加环境变量文件/opt/pgsql/env
```
export PGHOME=/opt/db/pgsql
export PGDATA=$PGHOME/data
export PGHOST=$PGDATA
export LD_LIBRARY_PATH=$PGHOME/lib

export PATH=$PGHOME/bin:$PATH

alias p0='pg_ctl stop'
alias p1='pg_ctl -l $PGDATA/log start'
alias pl='psql -l'
alias showpg='tail -20 $PGDATA/log'
```
多数据库切换shell函数
```shell
function switchdb() {
    if [ -z '$1' ]; then
        echo '用法: switchdb [ivorysql|pg|highgo]'
        echo '例如: switchdb pg'
        return 1
    fi

    case '$1' in
        ivorysql)
            source /opt/db/ivorysql/env
            echo '✅ 已切换到 IvorySQL 环境。</description><guid isPermaLink="true">https://nothimmel.github.io/post/shu-ju-ku-shi-yong-shou-ce---ji-ben-ban.html</guid><pubDate>Wed, 11 Jun 2025 00:37:41 +0000</pubDate></item></channel></rss>