<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>拉吉塔尼的鹦鹉会笑:)</title><link>https://nothimmel.github.io</link><description>天地与我共生，万物与我为一</description><copyright>拉吉塔尼的鹦鹉会笑:)</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://nothimmel.github.io/avatar.svg</url><title>avatar</title><link>https://nothimmel.github.io</link></image><lastBuildDate>Thu, 19 Jun 2025 02:47:00 +0000</lastBuildDate><managingEditor>拉吉塔尼的鹦鹉会笑:)</managingEditor><ttl>60</ttl><webMaster>拉吉塔尼的鹦鹉会笑:)</webMaster><item><title>Redbook 5th 翻译 Part I</title><link>https://nothimmel.github.io/post/Redbook%205th%20-fan-yi-%20Part%20I.html</link><description>[原文链接](http://www.redbook.io)  

# [Preface](http://www.redbook.io/preface.html)
自上一版《数据库系统读物》问世以来的十年里，数据管理领域发生了爆炸式增长。</description><guid isPermaLink="true">https://nothimmel.github.io/post/Redbook%205th%20-fan-yi-%20Part%20I.html</guid><pubDate>Thu, 19 Jun 2025 02:46:35 +0000</pubDate></item><item><title>SQL语句</title><link>https://nothimmel.github.io/post/SQL-yu-ju.html</link><description># 简介
将DB学习过程中遇到的不明白的SQL语句记录在此。</description><guid isPermaLink="true">https://nothimmel.github.io/post/SQL-yu-ju.html</guid><pubDate>Thu, 12 Jun 2025 07:33:10 +0000</pubDate></item><item><title>CMU15-445冒险记</title><link>https://nothimmel.github.io/post/CMU15-445-mao-xian-ji.html</link><description># 课程链接
[课程主页](https://15445.courses.cs.cmu.edu/fall2024/schedule.html)
[课程视频](https://www.bilibili.com/video/BV169QhYZEhn)

# 进度
Lecture2 20min
Lecture3。</description><guid isPermaLink="true">https://nothimmel.github.io/post/CMU15-445-mao-xian-ji.html</guid><pubDate>Thu, 12 Jun 2025 06:17:37 +0000</pubDate></item><item><title>COMP9315冒险记</title><link>https://nothimmel.github.io/post/COMP9315-mao-xian-ji.html</link><description># 课程链接
&lt;a href='https://cgi.cse.unsw.edu.au/~cs9315/24T1/index.php' target='_blank'&gt;24课程主页&lt;/a&gt;
&lt;a href='https://www.bilibili.com/video/BV1qXoqYHErC?spm_id_from=333.788.videopod.episodes&amp;vd_source=28de2b83f4d42d39469471953b83bc66&amp;p=2' target='_blank'&gt;课程视频&lt;/a&gt;
&lt;a href='https://vwong.dev/notes/COMP9315/' target='_blank'&gt;课程笔记&lt;/a&gt;
&lt;a href='https://github.com/weil0819/COMP9315' target='_blank'&gt;离线课程材料&lt;/a&gt;


# 课程进度
p3 0：0

# 课程笔记
![Image](https://github.com/user-attachments/assets/0aac4ede-62de-4b67-ae17-6672f4089ff2)
添加表这个DDL操作，只会在数据库中的目录(Catalog)中新增一个条目，并返回一个状态如：
```psql
jas=# create table RR ( x integer, y integer);
CREATE TABLE

jas=# \d rr
    Table 'Public.rr'
Column | Type   | Modifiers
-------+---------+-----------
x      | integer |
y      | integer |      
``` 

关系代数语言可以用数学的角度来理解，也可以作为操作数据的汇编语言来理解。</description><guid isPermaLink="true">https://nothimmel.github.io/post/COMP9315-mao-xian-ji.html</guid><pubDate>Thu, 12 Jun 2025 06:12:36 +0000</pubDate></item><item><title>PostgreSQL 服务端编码支持GB18030</title><link>https://nothimmel.github.io/post/PostgreSQL%20-fu-wu-duan-bian-ma-zhi-chi-GB18030.html</link><description># 编码介绍
目前熟知的编码方式如下：

- 基础ASCII 单字节 7位128个
- 扩展ASCII 单字节 8位256个
- GB2312-80  可变长编码（1-2字节） 6763个汉字 国标
- GBK 可变长编码（1-2字节）21003个汉字 商业非国标
- UTF Unicode标准
- UTF-16 可变长编码（2或4字节） 不兼容ASCII
- UTF-8 可变长编码（1-4字节 ASCII、希腊字母、汉字、其他平面符号）
- GB18030 
- GB18030-2000/2005
- [GB18030-2022](https://openstd.samr.gov.cn/bzgk/gb/newGbInfo?hcno=A1931A578FE14957104988029B0833D3) 可变长编码（1ASCII，2GBK，4其他文字扩展 字节） CJK 统一汉字87875个

问题：GB18030完全兼容GBK吗？

尊重UTF-8是目前应用最广泛的编码，给出一个示例：

&lt;!--StartFragment--&gt;
  | 第1字节 | 第2字节 | 第3字节 | 第4字节
-- | -- | -- | -- | --
单字节示例 | 0xxxxxxx |   |   |  
双字节示例 | 110xxxxx | 10xxxxxx |   |  
三字节示例 | 1110xxxx | 10xxxxxx | 10xxxxxx |  
四字节示例 | 11110xxx | 10xxxxxx | 10xxxxxx | 10xxxxxx
&lt;!--EndFragment--&gt;

# Posgres中的[支持编码集](https://www.postgresql.org/docs/current/multibyte.html)
截至pg18，不支持服务端的GB18030编码
![Image](https://github.com/user-attachments/assets/9f177f06-df11-4c29-8244-0fcb64137c69)

# 支持GB18030思路

- [ ] 创建 GB18030 编码的数据库，可考虑实现多版本2005/2022
- [ ] GB18030作为服务器编码时，要能够在pg_conversion中和客户端其他的字符集编码进行转换
- [ ] 适配识别GB18030的字符串处理函数
- [ ] 适配GB18030字符集的排序、索引

# 支持GB18030服务器编码的数据库是什么样的？

## 首先服务器要支持GB18030
sudo locale-gen zh_CN.GBK
sudo locale-gen zh_CN.GB18030

sudo dpkg-reconfigure locales

## 1. pro
```
SELECT DISTINCT pg_encoding_to_char(conforencoding) AS supported_encoding
FROM pg_conversion
ORDER BY supported_encoding;
--查询了系统目录 pg_conversion，这个表存储了所有可用的编码转换规则。</description><guid isPermaLink="true">https://nothimmel.github.io/post/PostgreSQL%20-fu-wu-duan-bian-ma-zhi-chi-GB18030.html</guid><pubDate>Wed, 11 Jun 2025 08:45:32 +0000</pubDate></item><item><title>数据库使用手册-基本版</title><link>https://nothimmel.github.io/post/shu-ju-ku-shi-yong-shou-ce---ji-ben-ban.html</link><description>## Postgres
下载Postgres[源码](http://www.postgresql.org/ftp/source/)
```
tar xfj *.bz2 # tar -zxvf *.gz
# useradd -m postgres; passwd postgres;
sudo mkdir -p /opt/pgsql
sudo chown -R $USER /opt/pgsql
./configure --prefix=/opt/pgsql &amp;&amp; make -j 8 &amp;&amp; make install
```

添加环境变量文件/opt/pgsql/env
```
export PGDATA=/opt/pgsql/data
export PGHOST=$PGDATA
export LD_LIBRARY_PATH=/opt/pgsql/lib

export PATH=/opt/pgsql/bin:$PATH

alias p0='pg_ctl stop'
alias p1='pg_ctl -l $PGDATA/log start'
alias pl='psql -l'
alias showpg='tail -20 $PGDATA/log'
```

修改配置文件
```
edit $PGDATA/postgresql.conf
... set listen_addresses = '' ...
... set max_connections = 10 ...
... set max_wal_senders = 4 ...
... set unix_socket_directories = 'name of PGDATA directory' ...
```

### 启动数据库
```
initdb -D $PGDATA # initdb
pg_ctl -D $PGDATA -l $PGDATA/log start # p1
psql -p 5432 
```
### 修改pg_hba.conf配置
```
#最后一行添加，允许远程密码连接，若不需要密码最后一个参数改为trust
host        all        all        0.0.0.0/0        md5
# 若端口号有冲突使用netstat -anp | grep 5432
# pg_ctl reload重新读取pg_hba.conf文件
```

### 创建、迁移数据库用户
```sql
postgres=# create user your_name with password 'password';
CREATE ROLE
-- ALTER your_name name with password 'newpassword'; 
-- ALTER TABLE your_table_name OWNER TO new_username;
```
## HighgoDB

### 启动数据库
```shell
initdb -D $PGDATA
hg_sslkeygen.sh  -D $PGDATA
pg_ctl -D $PGDATA -l ~/logs/hg_0611 restart
psql -U sysdba -d highgo
``` 

## IvorySQL
[Github Release](https://github.com/IvorySQL/IvorySQL/releases)下载安装包。</description><guid isPermaLink="true">https://nothimmel.github.io/post/shu-ju-ku-shi-yong-shou-ce---ji-ben-ban.html</guid><pubDate>Wed, 11 Jun 2025 00:37:41 +0000</pubDate></item></channel></rss>